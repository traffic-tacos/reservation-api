# Application Configuration
spring.application.name=reservation-api
spring.profiles.active=local

# Traffic Tacos MSA Port Allocation:
# gateway-api     = 8000 (REST), 8001 (gRPC)
# reservation-api = 8010 (REST), 8011 (gRPC) <- THIS SERVICE
# inventory-api   = 8020 (REST), 8021 (gRPC)
# payment-sim-api = 8030 (REST), 8031 (gRPC)
# reservation-worker = 8040 (REST), 8041 (gRPC)

# Common Server Configuration
server.port=8010
server.netty.connection-timeout=30s
server.netty.h2c-max-content-length=10MB

# gRPC Server Configuration
grpc.server.port=8011
grpc.server.enable-reflection=true

# gRPC Client Configuration
grpc.client.inventory-service.address=localhost:8021

# Management/Actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.tracing.sampling.probability=1.0

# Resilience4j
resilience4j.circuitbreaker.instances.inventory-grpc.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory-grpc.wait-duration-in-open-state=30s
resilience4j.timelimiter.instances.inventory-grpc.timeout-duration=250ms

# Common Logging Configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
