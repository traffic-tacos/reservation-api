version: '3.8'

services:
  # DynamoDB Local for development
  dynamodb-local:
    image: amazon/dynamodb-local:2.5.2
    container_name: reservation-dynamodb-local
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - reservation-network

  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack:3.8.1
    container_name: reservation-localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=eventbridge,scheduler,secretsmanager
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_HOST=localhost
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - reservation-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.115.0
    container_name: reservation-otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    depends_on:
      - prometheus
    networks:
      - reservation-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: reservation-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - reservation-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana-oss:11.3.1
    container_name: reservation-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - reservation-network

volumes:
  dynamodb-data:
  localstack-data:
  prometheus-data:
  grafana-data:

networks:
  reservation-network:
    driver: bridge